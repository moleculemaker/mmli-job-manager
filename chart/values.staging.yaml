ingress:
  hostname: jobmgr.staging.mmli1.ncsa.illinois.edu
  tls: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/tls-acme: "true"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: staging-cors-header@kubernetescrd

controller:
  image: moleculemaker/mmli-job-manager:staging

persistence:
  existingClaim: "mmli-clean-job-weights"
  storageClassName: csi-cinder-sc-retain
  storageSize: "100Gi"

mariadb:
  global:
    storageClass: csi-cinder-sc-retain
  enabled: true
  auth:
    username: mmli
    existingSecret: "job-manager-mariadb"

hcaptcha:
  auth:
    existingSecret: "hcaptcha"

extraDeploy:
- apiVersion: traefik.containo.us/v1alpha1
  kind: Middleware
  metadata:
    name: cors-header
    namespace: staging
  spec:
    headers:
      accessControlAllowCredentials: true
      accessControlAllowHeaders:
      - Origin
      - X-Requested-With
      - Content-Type
      - content-type
      - Accept
      - Authorization
      accessControlAllowMethods:
      - GET
      - OPTIONS
      - PUT
      - DELETE
      - POST
      accessControlAllowOriginList:
      - https://clean.frontend.mmli1.ncsa.illinois.edu
      - https://clean.frontend.staging.mmli1.ncsa.illinois.edu
      - https://jobmgr.mmli1.ncsa.illinois.edu
      - https://jobmgr.staging.mmli1.ncsa.illinois.edu


config:
  server:
    protocol: "https"
    ## API hostname. Must match the ingress.hostname value.
    hostName: "jobmgr.staging.mmli1.ncsa.illinois.edu"
    namespace: "staging"
  oauth:
    userInfoUrl: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/userinfo"
  uws:
    ## Server working directory to store generated job data
    workingVolume:
      claimName: "mmli-clean-job-weights"
      mountPath: "/uws"
      subPath: "uws"
    ## Central data volumes to be mounted in job containers
    volumes:
      - name: 'job-output'
        mountPath: '/app/data/inputs'
        subPath: 'input'
        claimName: 'mmli-clean-job-weights'
      - name: 'job-output'
        mountPath: '/app/results/inputs'
        subPath: 'output'
        claimName: 'mmli-clean-job-weights'
      - name: 'job-output'
        mountPath: '/root/.cache/torch/hub/checkpoints'
        subPath: 'weights'
        claimName: 'mmli-clean-job-weights'
    # - name: data
    #   claimName: mmli-data-pvc
    #   mountPath: "/data/mmli"
    #   subPath: ""
    #   readOnly: true
